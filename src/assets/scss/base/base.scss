@use '../utils' as *;

html {
  font-size: toRem(12);
  scroll-behavior: smooth;
  line-height: toRem(18);

  @include media(sm) {
    font-size: toRem(14);
    line-height: toRem(20);
  }

  @include media(md) {
    font-size: toRem(15);
    line-height: toRem(24);
  }

  @include media(lg) {
    font-size: toRem(16);
    line-height: toRem(28);
  }

  @include media(xxl) {
    font-size: toRem(16);
    line-height: toRem(28);
  }
}

body {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  font-size: inherit;
  margin: 0;
  padding: 0;
  background-color: $base-white;
  font-family: $font-open-sans;
  font-weight: $font-semibold;
  color: $base-text;
  @include scrollbars();
}

main.app-content {
  max-height: calc(100vh - toRem(48));
  overflow-y: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: $font-semibold;
  font-family: $font-montserrat;
  margin: 0;
  padding: 0;
}

a {
  color: $base-text;
  text-decoration: none;
  display: inline-block;
  @include transition;

  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    @include transition;
    color: $primary-color;
  }
}

strong {
  font-weight: $font-bold;
}

.font-regular {
  font-weight: $font-regular;
}

.font-medium {
  font-weight: $font-medium;
}

.font-semibold {
  font-weight: $font-semibold;
}

.font-bold {
  font-weight: $font-bold;
}

p {
  line-height: 1.3;
}

label {
  font-weight: $font-bold;

  .error {
    color: $base-danger;
    margin-left: toRem(4);
  }
}

// For container
.container,
.container-fluid {
  width: 100%;
  margin: 0 auto;
  padding: 0 toRem(12);

  @include media(sm) {
    padding: 0 toRem(14);
  }

  @include media(md, lg, xl) {
    padding: 0 toRem(16);
  }

  @include media(xxl, xxxl, xxxxl) {
    padding: 0 toRem(20);
  }

  &.container {
    max-width: $xxl;
  }
}

.error {
  color: $base-danger;
  font-size: toRem(12);
  margin-top: toRem(6);
}

.no-padd {
  padding: 0 !important;
}

.no-mgr {
  margin: 0 !important;
}

input {
  @include placeholder {
    font-size: $input-placeholder-font-size;
    font-weight: $input-placeholder-font-weight;
    color: $input-placeholder-color;
  }
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.app-content {
  padding: toRem(24);
  background-color: $background-color;
}

/* styles/global.scss */
[class^='ant-'],
[class*=' ant-'] {
  box-shadow: none !important;
}

.input-phone {
  font-weight: $font-semibold;
  border-width: toRem(2) !important;
  border-radius: toRem(8) !important;
  margin: 0;
  padding: toRem(10) toRem(14);
  color: $base-text;
  font-size: toRem(14);
  line-height: 1.5714285714285714;
  list-style: none;
  font-family: $font-open-sans;
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 0;
  background: $base-white;
  border-style: solid;
  border-color: $border-color;

  &:focus,
  &:active,
  &:hover,
  &:focus-within,
  &:active {
    border-color: $primary-color;
  }

  &.error {
    border-color: $base-danger;

    &:focus,
    &:active,
    &:hover,
    &:focus-within,
    &:active {
      border-color: $base-danger;
    }
  }
}

sup {
  color: $base-danger;
}

.modalBody {
  .ant-modal-content {
    padding: toRem(60) toRem(24);
  }
}

.anticon:hover {
  color: $primary-color;
}

.d-inline-flex {
  display: inline-flex;
}

.reset-password {
  padding: toRem(12) toRem(14);
  font-size: toRem(14);
  font-weight: $font-semibold;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  animation: none;
  border-radius: toRem(8);

  .ant-btn-icon {
    display: inline-flex;
  }
}

input[disabled] {
  color: rgba(1, 1, 1, 0.25);
  background-color: rgba(1, 1, 1, 0.04);
  border-color: $border-color;
  box-shadow: none;
  cursor: not-allowed;
  opacity: 1;
}

.w-100 {
  width: 100%;
}

.content-card {
  .ant-card-body {
    padding: toRem(0);
  }
}

.ant-image {
  width: 100%;
  height: 100%;
}

#ContentList {
  padding-right: toRem(16);
  overflow-x: hidden;

  .infinite-scroll-component {
    overflow-x: hidden !important;
  }
}

.ant-menu {
  .ant-menu-item {
    svg path {
      fill: $Menu-selected;
    }

    svg rect {
      fill: $Menu-selected;
    }

    &.ant-menu-item-selected {
      svg,
      svg path {
        fill: $primary-color;
      }

      svg rect {
        fill: $primary-color;
      }
    }
  }
}

.reset-password svg {
  svg path {
    fill: $Menu-selected;
  }
}

.resend-link {
  color: $primary-color;
  cursor: pointer;
  &.disabled {
    color: #bfbfbf;
    pointer-events: none;
    cursor: not-allowed;
    text-decoration: none;
  }
}

.cursor-pointer {
  cursor: pointer;
}

.uploadDragger {
  .ant-upload.ant-upload-drag {
    border: toRem(2) solid $border-color;
    border-radius: toRem(8) !important;
    background-color: $base-white;
    min-height: toRem(180);
    display: flex;
    align-items: center;

    .ant-upload-text {
      font-size: toRem(14);
      font-weight: $font-semibold;
      color: $base-text;
      margin: 0;
    }

    .ant-upload-hint {
      font-size: toRem(12);
      font-weight: $font-medium;
      color: $input-placeholder-color;
    }
  }

  &.error {
    .ant-upload.ant-upload-drag {
      border-color: $base-danger;
      min-height: toRem(200);
      display: flex;
      align-items: center;
      justify-content: center;

      &:focus,
      &:active,
      &:hover,
      &:focus-within,
      &:active {
        border-color: $base-danger;
      }
    }
  }

  .ant-upload-list-item {
    padding: toRem(4) toRem(8);
    height: auto !important;
    font-size: toRem(14);
    font-weight: $font-medium;
  }
}

.ant-card.ant-card-bordered {
  .ant-card-head {
    border: 1px solid $border-color;
    background: $card-header-bg;
    min-height: toRem(40);
    font-size: toRem(13);
  }
}

.ant-card.ant-card-bordered.questionsSection {
  height: 100%;

  .ant-card-body {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

.upload-profile {
  flex-direction: column;
  display: flex;
  padding: toRem(32) toRem(16);
  justify-content: center;
  align-items: center;
  gap: toRem(16);
  align-self: stretch;
  border-radius: 4px;
  border: toRem(2) solid $border-color;
  background: #fff;
  color: $input-placeholder-color;
  text-align: center;
  font-size: toRem(12);
  font-weight: $font-medium;
}
.action-disabled {
  color: lighten($base-text, 60%);
  cursor: not-allowed !important;
  pointer-events: none;
}
.ant-otp {
  display: flex;
  justify-content: space-between;
  gap: toRem(10);
  .ant-otp-input {
    padding: toRem(12) toRem(20);
    font-size: toRem(20);
  }
}

.ant-checkbox-checked .ant-checkbox-inner {
  border-color: $base-white;
}
.content-type-button {
  cursor: pointer;
  &:disabled {
    cursor: not-allowed;
  }
  &.selected {
    &:disabled {
      background-color: $primary-color;
      color: $base-white;
    }
  }
}
